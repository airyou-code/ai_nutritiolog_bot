version: '3.8'

services:
  bot:
    image: airyou/prompthub:nutrition-bot
    env_file:
      - .env
    depends_on:
      - db
      - redis
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 15s
        monitor: 30s
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 10s
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      placement:
        constraints:
          - node.role == worker
    healthcheck:
      test: python -c "import asyncio; print('Bot is healthy')" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - nutribot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-nutrition_bot}
      POSTGRES_USER: ${POSTGRES_USER:-nutrition_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - target: 5432
        published: 15432
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-nutrition_user} -d ${POSTGRES_DB:-nutrition_bot}"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - nutribot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  redis:
    image: redis:7.4-alpine
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --protected-mode yes
      --save 900 1
      --save 300 10
      --save 60 10000
      --rdbcompression yes
      --rdbchecksum yes
    env_file:
      - .env
    volumes:
      - redis_data:/data
    ports:
      - target: 6379
        published: 16379
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 5s
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli -a ${REDIS_PASSWORD} ping | grep -q PONG']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - nutribot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  nutribot-network:

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local 